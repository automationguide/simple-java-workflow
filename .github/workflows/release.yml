name: Release

on:
  pull_request:
    types:
    - closed

concurrency:
  group: ${{ github.head_ref }}/${{ github.ref }}
  cancel-in-progress: true

jobs:
  config:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
      config: ${{ steps.config.outputs.config }}

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Extract the config as a whole
      id: config
      run: echo "::set-output name=config::$(jq -Mc '.' .github/config.json)"

    - name: Extract the matrix
      id: matrix
      run: echo "::set-output name=matrix::$(jq -Mc '.matrix' .github/config.json)"

  test:
    name: JDK ${{ matrix.jdk }} on ${{ matrix.os }}
    needs: config
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.config.outputs.matrix) }}

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: ${{ matrix.jdk }}

    - name: Setup Maven cache
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Test Java
      run: mvn test

  sonar:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Sonar checks
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=automationguide_simple-java-workflow

  build:
    needs:
    - config
    - test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: ${{ fromJson(needs.config.outputs.config).java-version }}

    - name: Setup Maven cache
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build Java
      run: mvn package assembly:single

    - name: Upload the Jar
      uses: actions/upload-artifact@v2
      with:
        name: hello-world-jar
        path: target/hello-world.jar

  docker:
    needs: build
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Remove SNAPSHOT
      run: mvn versions:set -DremoveSnapshot

    - name: Commit back to repository
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.email "noreply@automationguide.tech"
        git config user.name "Automation User"
        git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
        git add pom.xml
        git commit -m "Removing SNAPSHOT"
        git push -u origin main

    - name: Download the Jar
      uses: actions/download-artifact@v2
      with:
        name: hello-world-jar

    - name: Extract version from pom.xml
      id: maven-version
      run: echo "::set-output name=version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"

    - name: Build Docker image
      run: docker build -t docker-registry-prod:5000/hello-world:${{ steps.maven-version.outputs.version }} .

    - name: Push Docker image
      run: docker push docker-registry-prod:5000/hello-world:${{ steps.maven-version.outputs.version }}
