name: Pull request

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.head_ref }}/${{ github.ref }}
  cancel-in-progress: true

jobs:
  config:
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
      config: ${{ steps.config.outputs.config }}

    steps:
    - uses: actions/checkout@v3
      with:
        ref: main

    - name: Extract the config as a whole
      id: config
      run: echo "::set-output name=config::$(jq -Mc '.' config.json)"

    - name: Extract the matrix
      id: matrix
      run: echo "::set-output name=matrix::$(jq -Mc '.matrix' config.json)"

  build:
    needs: config
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: main

    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: ${{ fromJson(needs.config.outputs.config).java-version }}

    - name: Setup Maven cache
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build Java
      run: mvn package assembly:single

  test:
    name: JDK ${{ matrix.jdk }} on ${{ matrix.os }}
    needs:
    - config
    - build
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.config.outputs.matrix) }}

    steps:
    - uses: actions/checkout@v3
      with:
        ref: main

    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: ${{ matrix.jdk }}

    - name: Setup Maven cache
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Test Java
      run: mvn test
